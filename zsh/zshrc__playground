focus() {
  # Default to 25 minutes if no argument is provided
  local minutes=25
  local focus_task=""
  local test_mode=false

  # Check for test flag
  if [[ "$1" == "--test" ]]; then
    test_mode=true
    minutes=0.0833 # 5 seconds in minutes
    shift # Remove --test from args
  fi

  # If first arg is a number, use it as minutes
  if [[ $1 =~ ^[0-9]+$ ]]; then
    minutes=$1
    focus_task=$2
  else
    # If first arg exists but isn't a number, it's the task
    focus_task=$1
  fi

  local remaining_minutes=$minutes
  local total_blocks=20
  local filled_char="█"
  local empty_char="░"
  
  # Start an equivalent timer in Clock.app
  # osascript -e "tell application \"Clock\" to start timer with duration $minutes minutes"
  osascript -e 'tell application "Alfred 5" to run trigger "timer" in workflow "com.vitorgalvao.alfred.shriekingchimes" with argument "'$((minutes * 60))'"'

  # Clear screen and show initial focus message
  clear
  if [ -z "$focus_task" ]; then
    echo "😑 Currently focusing"
  else
    echo "🎯 $focus_task"
  fi
  echo "───────────────────────────────────"

  # Use 5 seconds for test mode
  local sleep_duration=60
  if [ "$test_mode" = true ]; then
    sleep_duration=5
  fi

  while [ $(echo "$remaining_minutes > 0" | bc -l) -eq 1 ]; do
    # Calculate progress bar
    local filled_blocks=$(echo "$remaining_minutes * $total_blocks / $minutes" | bc -l | awk '{print int($1)}')
    local empty_blocks=$((total_blocks - filled_blocks))
    local progress_bar=""

    # Build progress bar string
    for ((i = 0; i < filled_blocks; i++)); do
      progress_bar+=$filled_char
    done
    for ((i = 0; i < empty_blocks; i++)); do
      progress_bar+=$empty_char
    done

    # Clear previous line and show progress
    echo -ne "\r\033[K"
    echo -ne "\n⏰ $progress_bar $remaining_minutes minute(s) remaining"

    if [ $(echo "$remaining_minutes >= 2 && $remaining_minutes < 3" | bc -l) -eq 1 ]; then
      osascript -e "display notification \"Your screen will lock in 2 minutes! ⚠️\" with title \"$focus_task\""
    fi

    sleep $sleep_duration
    remaining_minutes=$(echo "$remaining_minutes - ($sleep_duration / 60)" | bc -l)
  done
  echo # Add newline at end

  # Lock the screen
  pmset displaysleepnow
}
